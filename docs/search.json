[{"path":"https://bpollner.github.io/uniset/articles/description.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"Description & Explanation","text":"Package uniset enables package (‘target package’) provide users easily accessible, user-friendly human readable text file key=value pairs (used functions defined target package) can saved. settings file lives location defined user target package, user-defined values remain unchanged even author target package introducing deleting keys, target package updated re-installed. order enable target package make use functionality offered package uniset, four files exported uniset placed target package.","code":""},{"path":"https://bpollner.github.io/uniset/articles/description.html","id":"advantage","dir":"Articles","previous_headings":"","what":"Advantage","title":"Description & Explanation","text":"imminent advantage uniset settings-file system using static file permanently storing settings package fact key=value pairs ‘settings.R’ file get updated (added / deleted) dynamically. developer package can delete keys introduce new ones, new key=value pairs automatically added deleted local ‘settings.R’ file. Values changed user target package preserved. author target package can add delete keys ‘settings.R’ file without worrying cause effort troubles user target package.","code":""},{"path":"https://bpollner.github.io/uniset/articles/description.html","id":"two-ways-to-generate-the-required-files","dir":"Articles","previous_headings":"","what":"Two ways to generate the required files","title":"Description & Explanation","text":"1) Export Move Files Use uniset_getFiles(), move ‘xxx_settings.R’ file (‘xxx’ name target package) ‘inst’ folder (create one already done) target package. Move file ‘zzz.R’, ‘uniset_globals.R’ ‘uniset_functions.R’ ‘R’ folder target package. case ‘.onLoad’ function already defined, add eight lines code file ‘zzz.R’ existing ‘.onLoad’ function. case ‘.onUnLoad’ function already defined, add one line code file ‘zzz.R’ existing ‘.onUnLoad’ function. 2) Write files directly target package (recommended) Alternatively, use uniset_copyFilesToPackage() copy required files directly target package. cases name setup-function provided, name function defined target package contains uniset function uniset_setup().","code":""},{"path":"https://bpollner.github.io/uniset/articles/description.html","id":"accessing-values-from-within-target-package","dir":"Articles","previous_headings":"","what":"Accessing values from within target package","title":"Description & Explanation","text":"Every variable defined ‘settings.R’ file accessible code target package. target package list uniset import, functions uniset_updateSettings() uniset_autoUpS() called function defined target package can used manually automatically update settings, .e. read key=value pairs stored ‘settings.R’ file accessible environment created target package. See next page practical example.","code":""},{"path":"https://bpollner.github.io/uniset/articles/description.html","id":"some-more-explanations","dir":"Articles","previous_headings":"","what":"Some more explanations","title":"Description & Explanation","text":"can define functions target package (example package ‘dogPack’) can call following four functions uniset: uniset_setup(=\"somePath\", get(\"uev\")) uniset_test(get(\"uev\")) uniset_updateSettings(get(\"uev\"), \"nameOfSetupFunction\") uniset_autoUpS(get(\"uev\"), \"nameOfSetupFunction\") uev global constant defined target package, handing name environment necessary variables stored. uniset_test() merely testing function see handover environments etc. working properly. \"nameOfSetupFunction\"name function defined target package containing uniset setup-function uniset_setup(). function uniset_setup() : Creating required environment variable .Renviron file, copying ‘dogPack_settings.R’ file destination specified user ‘dogPack’. file (’dogPack_settings.R) meant seen, read modified user package dogPack. functions uniset_updateSettings() uniset_autoUpS() updating (adding / deleting) key=value pairs local, user-level ‘dogPack_settings.R’ file according possibly new template dogPack installation folder. Thus, whenever developer package dogPack introducing new deleting obsolete key=value pairs, automatically added deleted user´s file. values user modified preserved. Thus, new update installation package dogPack force user package dogPack completely re-customize ‘dogPack_settings.R’ file. Go see uniset can practical example.","code":""},{"path":"https://bpollner.github.io/uniset/articles/example.html","id":"initialise-settings-file-system","dir":"Articles","previous_headings":"","what":"Initialise Settings File System","title":"Practical Example","text":"Assuming copied moved required files described , open RStudio project file folder ‘dogPack’ desktop, build install package, call: done user target package. probably restart R now changes environment variable .Renviron file become effective. Now call:","code":"library(dogPack) dogPack_test_targetPackageParams() # gives a printout of the target package parameters dt <- \"~/desktop\" dogPack_demo_setup(where=dt) # will place the settings-home folder on the desktop library(dogPack) # if you had to restart R dogPack_demo_updateSettings()"},{"path":"https://bpollner.github.io/uniset/articles/example.html","id":"getting-values","dir":"Articles","previous_headings":"","what":"Getting Values","title":"Practical Example","text":"now everything ready set . can look settings via possible obtain values ‘dogPack_settings.R’ directly via: However, preferable use function getstn() defined package ‘dogPack’ directly obtain settings list – see example code dogPack_demo_autoUpS() dogPack_demo_tellFavouriteColor() example folder copied previously. getstn() customized package uniset time creating four required files located file ‘uniset_functions.R’ ‘dogPack/R’. Now open file ‘dogPack_settings.R’ folder ‘dogPack_SH’ created setup, change value key ‘favouriteColor’ “orange”. , call Cave: aware call auto-update function (defined uniset) re-instating values ‘dogPack_settings.R’ file object ‘settings’ environment ‘.dogPack_settingsEnv’, used key ‘gen_autoUpdateSettings’ settings.R file previously set ‘FALSE’. Including auto-update function uniset::uniset_autoUpS() demonstrated dogPack_demo_autoUpS course required – key=value pairs settings file can accessed anyway. Practically, makes sense include auto-update every function user target package can call, include functions. Go local settings.R file (settings-home folder ~/desktop)change key ‘favouriteColor’ back “blue”.","code":"stn <- dogPack_demo_updateSettings() str(stn) color <- .dogPack_settingsEnv$settings$favouriteColor color dogPack_demo_tellFavouriteColor() dogPack_demo_tellFavouriteColor() # should be still \"blue\" dogPack_demo_autoUpS() dogPack_demo_tellFavouriteColor() # should be \"orange\" now dogPack_demo_tellFavouriteColor() # the old value (\"orange\") dogPack_demo_No_autoUpS(F) dogPack_demo_tellFavouriteColor() # still orange # dogPack_demo_autoUpS(F) # now update the values dogPack_demo_tellFavouriteColor() # should be \"blue\" again"},{"path":"https://bpollner.github.io/uniset/articles/example.html","id":"adding-deleting-keys","dir":"Articles","previous_headings":"","what":"Adding / deleting keys","title":"Practical Example","text":"developer package dogPack, time published dogPack might want add keys delete settings file.","code":""},{"path":"https://bpollner.github.io/uniset/articles/example.html","id":"adding-keys","dir":"Articles","previous_headings":"Adding / deleting keys","what":"Adding Keys","title":"Practical Example","text":"now: Add e.g. new ‘key=value,’ pair (forget comma ‘,’) anywhere settings-file folder ‘inst’ dogPack, re-install dogPack. , alternative shortcut demonstration, go root installed dogPack package simply modify file ‘dogPack_settings.R’ (add key). Now user dogPack calls function includes auto-update function uniset::uniset_autoUpS(): user dogPack new key added local file ‘dogPack_settings.R’ folder ‘dogPack_SH’ settings-home directory.","code":"path.package(\"dogPack\") dogPack_demo_autoUpS(F)"},{"path":"https://bpollner.github.io/uniset/articles/example.html","id":"deleting-keys","dir":"Articles","previous_headings":"Adding / deleting keys","what":"Deleting Keys","title":"Practical Example","text":"true deleting keys: , open file ‘dogPack_settings.R’ root path.package(\"dogPack\") delete key. Now user dogPack calls function includes auto-update function uniset::uniset_autoUpS(): surplus keys deleted local file ‘dogPack_settings.R’. Enjoy !","code":"dogPack_demo_autoUpS(F)"},{"path":"https://bpollner.github.io/uniset/articles/uniset.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"uniset","text":"Package uniset enables package (‘target package’) provide users easily accessible, user-friendly human readable text file key=value pairs (used functions defined target package) can saved. settings file lives location defined user target package, user-defined values remain unchanged even author target package introducing deleting keys, target package updated re-installed. order enable target package make use functionality offered package uniset, four files exported uniset placed target package.","code":""},{"path":"https://bpollner.github.io/uniset/articles/uniset.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"uniset","text":"Install release version CRAN via download github:","code":"install.packages(\"uniset\") install_github(repo=\"bpollner/uniset\", ref=\"master\")"},{"path":"https://bpollner.github.io/uniset/articles/uniset.html","id":"set-up-example","dir":"Articles","previous_headings":"","what":"Set up example","title":"uniset","text":"assume want enable package called dogPack use dynamic settings file provided uniset. example, dogPack target package, want live ~/desktop. First copy example folder dogPack desktop:","code":"library(uniset) to <- \"~/desktop\" from <- paste0(path.package(\"uniset\"), \"/examples/dogPack\") file.copy(from, to, recursive = TRUE)"},{"path":"https://bpollner.github.io/uniset/articles/uniset.html","id":"generate-files","dir":"Articles","previous_headings":"","what":"Generate Files","title":"uniset","text":"two ways set target package (example package called dogPack) make use uniset: 1) Export Move Files package name, name setup-function location specified, call uniset_getFiles() creates folder containing four required files: Move ‘dogPack_settings.R’ file ‘inst’ folder (create one already done) dogPack. Move file ‘zzz.R’, ‘uniset_globals’ ‘uniset_functions.R’ ‘R’ folder dogPack. 2) Write files directly target package (recommended) call uniset_copyFilesToPackage() copies four required files directly target package – called dogPack example, living directly desktop. Please review file ‘dogPackFunc.R’ folder ‘dogPack/R’ copied desktop look code practical examples executed . Go read extended description deepen understanding uniset works.","code":"setupFunc <- \"dogPack_demo_setup\" # the name of the setup-function in our example to <- \"~/desktop\" uniset_getFiles(\"dogPack\", setupFunc, to) path <- \"~/desktop/dogPack\" setupFunc <- \"dogPack_demo_setup\" # the name of the setup-function in our example uniset_copyFilesToPackage(path, setupFunc)"},{"path":"https://bpollner.github.io/uniset/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bernhard Pollner. Maintainer, author. Zoltan Kovacs. Author.","code":""},{"path":"https://bpollner.github.io/uniset/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pollner B, Kovacs Z (2022). uniset: Dynamic Settings File. https://bpollner.github.io/uniset/, https://github.com/bpollner/uniset.","code":"@Manual{,   title = {uniset: Dynamic Settings File},   author = {Bernhard Pollner and Zoltan Kovacs},   year = {2022},   note = {https://bpollner.github.io/uniset/, https://github.com/bpollner/uniset}, }"},{"path":"https://bpollner.github.io/uniset/index.html","id":"uniset","dir":"","previous_headings":"","what":"Dynamic Settings File","title":"Dynamic Settings File","text":"Package uniset provides easily accessible, user-friendly text file settings-file R-package.","code":""},{"path":"https://bpollner.github.io/uniset/index.html","id":"summary","dir":"","previous_headings":"","what":"Summary","title":"Dynamic Settings File","text":"Package uniset enables package (‘target package’) provide users easily accessible, user-friendly human readable text file key=value pairs (used functions defined target package) can saved. settings file lives location defined user target package, user-defined values remain unchanged even author target package introducing deleting keys, target package updated re-installed. order enable target package make use functionality offered package uniset, four files exported uniset placed target package.","code":""},{"path":"https://bpollner.github.io/uniset/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Dynamic Settings File","text":"Install release version CRAN via download github:","code":"install.packages(\"uniset\") library(devtools) install_github(repo=\"bpollner/uniset\", ref=\"master\")"},{"path":"https://bpollner.github.io/uniset/reference/uniset.html","id":null,"dir":"Reference","previous_headings":"","what":"Dynamic Settings File — uniset","title":"Dynamic Settings File — uniset","text":"package (subsequently called 'target package') enabled  provide users easily accessible, user-friendly human readable  text file key=value pairs (used functions defined target  package) can saved. settings file lives location defined  user target package, user-defined values remain unchanged even  author target package introducing deleting keys,  target package updated re-installed. order enable  target package make use functionality offered package 'uniset',  four files exported 'uniset' placed target package.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dynamic Settings File — uniset","text":"two ways generate files required target package make use 'uniset': -) Export move manually Use uniset_getFiles, move 'xxx_settings.R' file ('xxx' name target package)  'inst' folder (create one already done) target package.  Move files 'zzz.R', 'uniset_globals.R' 'uniset_functions.R'  'R' folder target package. case '.onLoad' /'.onUnLoad'  functions already defined, modify accordingly. -) Write directly target package (Recommended) Use uniset_copyFilesToPackage copy required files directly target package. Every variable defined xxx_settings.R file accessible code target package. See created 'xxx_settings.R' file example. target package list 'uniset' 'import',  uniset_updateSettings uniset_autoUpS can used  manually automatically update settings,.e. read key=value  pairs stored xxx_settings.R file accessible  environment created target package. introduction detailed information please see https://bpollner.github.io/uniset/.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset.html","id":"important","dir":"Reference","previous_headings":"","what":"Important","title":"Dynamic Settings File — uniset","text":"case '.onLoad' function already defined, add eight lines code file 'zzz.R' existing '.onLoad' function,  case '.onUnLoad' function already defined, add one line code file 'zzz.R' existing '.onUnLoad' function.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset.html","id":"advantage","dir":"Reference","previous_headings":"","what":"Advantage","title":"Dynamic Settings File — uniset","text":"imminent advantage 'uniset' settings-file system using static file permanently storing settings  package fact key=value pairs xxx_settings.R file get updated (added / deleted) dynamically. developer package can delete keys introduce new ones, new key=value pairs automatically added deleted local xxx_settings.R file. Values changed  user target package preserved. author target  package can add delete keys xxx_settings.R file without worrying  cause effort troubles user target package.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Dynamic Settings File — uniset","text":"Please see https://bpollner.github.io/uniset/  practical example; bug reports can made  https://github.com/bpollner/uniset/issues.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset.html","id":"maintainer","dir":"Reference","previous_headings":"","what":"Maintainer","title":"Dynamic Settings File — uniset","text":"Bernhard Pollner <bernhard.pollner@mac.com>","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset.html","id":"functions-for-preparing-the-target-package","dir":"Reference","previous_headings":"","what":"Functions for preparing the target package","title":"Dynamic Settings File — uniset","text":"uniset_copyFilesToPackage, uniset_getFiles","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset.html","id":"functions-to-be-called-from-the-target-package","dir":"Reference","previous_headings":"","what":"Functions to be called from the target package","title":"Dynamic Settings File — uniset","text":"uniset_autoUpS, uniset_updateSettings,  uniset_test, : uniset_setup.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dynamic Settings File — uniset","text":"functions update settings file  (automatically) source settings intended called  within (installed) target package, please go  https://bpollner.github.io/uniset/ walk- real-life demonstration examples use functions  code target package.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Dynamic Settings File — uniset","text":"Bernhard Pollner, Zoltan Kovacs","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_autoUpS.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatically update Settings — uniset_autoUpS","title":"Automatically update Settings — uniset_autoUpS","text":"Use function within code automatically update settings users settings file","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_autoUpS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatically update Settings — uniset_autoUpS","text":"","code":"uniset_autoUpS(unisetEnv, setupFunc = NULL)"},{"path":"https://bpollner.github.io/uniset/reference/uniset_autoUpS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatically update Settings — uniset_autoUpS","text":"unisetEnv Character length one. Hand global variable defined target package holding name uniset-environment specific target package ('uniset_env_name' 'uev', see examples uniset.) setupFunc Character length one. name function target  package performing setup, .e. name function  containing uniset function uniset_setup. Defaults  'NULL'; changed.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_autoUpS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatically update Settings — uniset_autoUpS","text":"primarily called side effects, .e automatically  update / (re-)source settings file environment defined  target package. Returns (invisible) 'FALSE' update  unsuccessful, otherwise (invisible) list settings sourced  settings.R file.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_autoUpS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Automatically update Settings — uniset_autoUpS","text":"'autoUpdateSettings' local settings.R file left 'TRUE',  settings checked resp. updated automatically every time function  target package calling uniset_autoUpS.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_autoUpS.html","id":"important","dir":"Reference","previous_headings":"","what":"Important","title":"Automatically update Settings — uniset_autoUpS","text":"function meant called within  target package.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_autoUpS.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Automatically update Settings — uniset_autoUpS","text":"Please refer uniset link examples  real-world demo.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_autoUpS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automatically update Settings — uniset_autoUpS","text":"","code":"{ if (FALSE) { # to be called from within the target package uniset_autoUpS(get(\"uev\"), \"dogPack_demo_setup\") } }"},{"path":"https://bpollner.github.io/uniset/reference/uniset_copyFilesToPackage.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy Uniset Files into Target Package — uniset_copyFilesToPackage","title":"Copy Uniset Files into Target Package — uniset_copyFilesToPackage","text":"Generate four files required target package (.e. package enabled use package 'uniset'). generated files copied directly required destination folders target package. name target package extracted description file.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_copyFilesToPackage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy Uniset Files into Target Package — uniset_copyFilesToPackage","text":"","code":"uniset_copyFilesToPackage(   pathToPackage,   setupFunc = NULL,   taPaSH = \"def\",   taPaObj = \"settings\",   tmpl = \"_TEMPLATE\" )"},{"path":"https://bpollner.github.io/uniset/reference/uniset_copyFilesToPackage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy Uniset Files into Target Package — uniset_copyFilesToPackage","text":"pathToPackage Character length one. path root target package. setupFunc Character length one. name function  target package containing setup-function  uniset_setup. taPaSH Character length one. name variable defined '.Renviron' file, leading place settings.R file target package stored. left default 'def', 'taPaName_SH' used, 'taPaName' value provided argument 'taPaName'. taPaObj Character length one. name object holding list key-value pairs can defined used target package.  Can left default 'settings'. tmpl Character length one. Character string appended fresh settings file copied (target package) users  settings home directory updating key=value pairs successful.  Can left default '_TEMPLATE'.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_copyFilesToPackage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy Uniset Files into Target Package — uniset_copyFilesToPackage","text":"Writes four required files directly valid R-package folder structure. Returns (invisible) NULL.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_copyFilesToPackage.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Copy Uniset Files into Target Package — uniset_copyFilesToPackage","text":"Please refer uniset link examples  real-world demo.","code":""},{"path":[]},{"path":"https://bpollner.github.io/uniset/reference/uniset_copyFilesToPackage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy Uniset Files into Target Package — uniset_copyFilesToPackage","text":"","code":"{ library(uniset) # first copy the target package example into tempdir to <- tempdir() from <- paste0(path.package(\"uniset\"), \"/examples/dogPack\") file.copy(from, to, recursive = TRUE)  # now copy the four required files directly into the package 'dogPack' path <- paste0(to, \"/dogPack\") uniset_copyFilesToPackage(path, \"nameOfSetupFunc\") } #> A file called 'dogPack_settings.R' has been written into the 'inst' folder,  #> three files called 'zzz.R', 'uniset_globals.R' and 'uniset_functions.R' have been written into the 'R' folder of the package 'dogPack' at  #> '/var/folders/lz/7rwkvs09671dzp_fgvtxyrqh0000gq/T//RtmpUleo3l/dogPack'. #>  #> You will be able to access values of the file 'dogPack_settings.R' via the code:  #> '.dogPack_settingsEnv$settings$KEY' #> (With 'KEY' being any of the 'key=value' pairs defined in the file 'dogPack_settings.R'.) #>  #> Or (recommended), use the function  #> 'getstn()' #> inside a function defined in the package 'dogPack' to directly get the list holding the key=value pairs. #>"},{"path":"https://bpollner.github.io/uniset/reference/uniset_getFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Uniset Files — uniset_getFiles","title":"Get Uniset Files — uniset_getFiles","text":"Function generate four files required target package (.e. package enabled use package 'uniset').","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_getFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Uniset Files — uniset_getFiles","text":"","code":"uniset_getFiles(   taPaName = NULL,   setupFunc = NULL,   where = NULL,   taPaSH = \"def\",   taPaObj = \"settings\",   tmpl = \"_TEMPLATE\" )"},{"path":"https://bpollner.github.io/uniset/reference/uniset_getFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Uniset Files — uniset_getFiles","text":"taPaName Character length one. name target package. setupFunc Character length one. name function  target package containing setup-function  uniset_setup. Character length one. location folder resulting four files copied . Defaults 'NULL'. left  default 'NULL', location selectable interactively. Provide  character length one holding valid path existing folder copy  folder containing four required files . taPaSH Character length one. name variable defined '.Renviron' file, leading place settings.R file target package stored. left default 'def', 'taPaName_SH' used, 'taPaName' value provided argument 'taPaName'. taPaObj Character length one. name object holding list key-value pairs can defined used target package.  Can left default 'settings'. tmpl Character length one. Character string appended fresh settings file copied (target package) users  settings home directory updating key=value pairs successful.  Can left default '_TEMPLATE'.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_getFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Uniset Files — uniset_getFiles","text":"Creates folder location specified argument '' four files moved target package . Returns (invisible) character holding path folder three files written .","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_getFiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Uniset Files — uniset_getFiles","text":"Look content four generated files information  moved.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_getFiles.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get Uniset Files — uniset_getFiles","text":"Please refer uniset link examples  real-world demo.","code":""},{"path":[]},{"path":"https://bpollner.github.io/uniset/reference/uniset_getFiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Uniset Files — uniset_getFiles","text":"","code":"{ library(uniset) # first copy the target package example into tempdir to <- tempdir() from <- paste0(path.package(\"uniset\"), \"/examples/dogPack\") file.copy(from, to, recursive = TRUE)  # now copy the four required files uniset_getFiles(\"dogPack\", setupFunc=\"nameOfSetupFunc\", where=to) # Now manually move the four files according to the instructions contained  # in them. } #> Four files called  #> 'zzz.R' #> 'uniset_globals.R' #> 'dogPack_settings.R' #> 'uniset_functions.R #> have been written to the folder  #> '/var/folders/lz/7rwkvs09671dzp_fgvtxyrqh0000gq/T//RtmpUleo3l/UnisetFiles_R-pkg_'dogPack'' #> Please move these four files into their resp. target folders (see ?uniset, or have a look at the content of the four generated files #>  #> You will be able to access values of the file 'dogPack_settings.R' via the code:  #> '.dogPack_settingsEnv$settings$KEY' #> (With 'KEY' being any of the 'key=value' pairs defined in the file 'dogPack_settings.R'.) #>  #> Or (recommended), use the function  #> 'getstn()' #> inside a function defined in the package 'dogPack' to directly get the list holding the key=value pairs. #>"},{"path":"https://bpollner.github.io/uniset/reference/uniset_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Setup — uniset_setup","title":"Perform Setup — uniset_setup","text":"Perform required setup enable target package make  use functionality package 'uniset'. called  user target package.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Setup — uniset_setup","text":"","code":"uniset_setup(where = NULL, unisetEnv)"},{"path":"https://bpollner.github.io/uniset/reference/uniset_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Setup — uniset_setup","text":"Character length one, holding path location  folder containing settings.R file located. Defaults 'NULL'.  left default 'NULL', location selectable interactively. unisetEnv Character length one. Hand global variable defined target package holding name uniset-environment specific target package ('uniset_env_name' 'uev', see examples uniset.)","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_setup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Setup — uniset_setup","text":"Called side effects, .e. initiate dynamic settings file  system (see Details.) Returns (invisible) character length one holding  path settings-home directory.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_setup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Setup — uniset_setup","text":"function intended called within  target package user target package. called  initiate system, .e. Define folder settings.R file located, Copy settings.R file folder, Create corresponding entry .Renviron file (create  .Renviron file exist). setup done manually (!) user target  package. However, called repeatedly, enables user target  package conveniently change settings-home directory  corresponding variable .Renviron file. case, factory-fresh  version settings.R file copied new settings-home  directory. user-defined values 'old' settings.R file  lost, user manually move / copy settings  old location new one.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_setup.html","id":"important","dir":"Reference","previous_headings":"","what":"Important","title":"Perform Setup — uniset_setup","text":"function meant called within  target package.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_setup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Setup — uniset_setup","text":"","code":"{ if (FALSE) { # to be called from within the target package uniset_setup(where, get(\"uev\")) } }"},{"path":"https://bpollner.github.io/uniset/reference/uniset_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple Test — uniset_test","title":"Simple Test — uniset_test","text":"Test input package name etc. correct / successful.  function meant called inside  target package.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple Test — uniset_test","text":"","code":"uniset_test(unisetEnv)"},{"path":"https://bpollner.github.io/uniset/reference/uniset_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple Test — uniset_test","text":"unisetEnv Character length one. name environment holding  uniset definitions single package.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple Test — uniset_test","text":"printing parameters defined target package,  returning parameters (invisible) list.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_test.html","id":"important","dir":"Reference","previous_headings":"","what":"Important","title":"Simple Test — uniset_test","text":"function intended called within  target package.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_test.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Simple Test — uniset_test","text":"Please refer uniset link examples  real-world demo.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple Test — uniset_test","text":"","code":"{ if (FALSE) { # to be called from within the target package uniset_test(get(\"uev\")) } }"},{"path":"https://bpollner.github.io/uniset/reference/uniset_updateSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Settings of Target Package — uniset_updateSettings","title":"Update Settings of Target Package — uniset_updateSettings","text":"Manually read settings-file target package settings home directory specified .Renviron file.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_updateSettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Settings of Target Package — uniset_updateSettings","text":"","code":"uniset_updateSettings(unisetEnv, setupFunc = NULL, silent = FALSE)"},{"path":"https://bpollner.github.io/uniset/reference/uniset_updateSettings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Settings of Target Package — uniset_updateSettings","text":"unisetEnv Character length one. Hand global variable defined target package holding name uniset-environment specific target package ('uniset_env_name' 'uev', see examples uniset.) setupFunc Character length one. name function target  package performing setup, .e. name function  containing uniset function uniset_setup. Defaults  'NULL'; changed. silent Logical. confirmation printed. Defaults 'FALSE'","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_updateSettings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Settings of Target Package — uniset_updateSettings","text":"function called side effects, .e  manually update / (re-)source settings file environment  defined target package. Returns (invisible) 'FALSE'  update unsuccessful, otherwise (invisible) list settings  sourced settings.R file.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_updateSettings.html","id":"important","dir":"Reference","previous_headings":"","what":"Important","title":"Update Settings of Target Package — uniset_updateSettings","text":"function meant called within  target package.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_updateSettings.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Update Settings of Target Package — uniset_updateSettings","text":"Please refer uniset link examples  real-world demo.","code":""},{"path":"https://bpollner.github.io/uniset/reference/uniset_updateSettings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update Settings of Target Package — uniset_updateSettings","text":"","code":"{ if (FALSE) { # to be called from within the target package uniset_updateSettings(get(\"uev\"), \"dogPack_demo_setup\") } }"}]
